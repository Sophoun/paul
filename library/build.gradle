apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'maven-publish'

android {
    compileSdkVersion                   31
    defaultConfig {
        minSdkVersion                   21
        targetSdkVersion                31
        versionCode                     1
        versionName                     "1.0"

        testInstrumentationRunner       "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled               false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Functionality
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "androidx.fragment:fragment-ktx:1.3.6"
    implementation "androidx.biometric:biometric:1.1.0"
    implementation 'com.android.billingclient:billing:4.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    // Firebase
    implementation "com.google.firebase:firebase-analytics:19.0.2"
    // okhttp
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
}

// publish aar
def libArtifactId = "paul"
def libVersion = "11.2"

Properties properties = new Properties()
properties.load(project.file("github.properties").newDataInputStream())

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Sophoun/paul")
            credentials {
                username = properties.getProperty("gpr.user")
                password = properties.getProperty("gpr.key")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId 'com.sohoun'
            artifactId libArtifactId
            version libVersion
            artifact("$buildDir/outputs/aar/$libArtifactId-release.aar") {
                builtBy build
            }
        }
    }
}

/**
 * Rename .aar file
 */
afterEvaluate {
    def debugFile = file("$buildDir/outputs/aar/library-debug.aar")
    def releaseFile = file("$buildDir/outputs/aar/library-release.aar")
    tasks.named("assembleDebug").configure {
        doLast {
            debugFile.renameTo("$buildDir/outputs/aar/$libArtifactId-debug.aar")
        }
    }
    tasks.named("assembleRelease").configure {
        doLast {
            releaseFile.renameTo("$buildDir/outputs/aar/$libArtifactId-release.aar")
        }
    }
}
